@using BG.BlazorWasmStarter.Enums
<svg xmlns="http://www.w3.org/2000/svg" role="button" @onclick="@(() => Onclick.InvokeAsync())"width=@GetWidth() height="@GetHeight()" class="@CssClass" style="@AdditionalCss" viewBox="0 0 24 24"><path fill=@ColourCode d="M15 9H5V5h10m-3 14a3 3 0 0 1-3-3a3 3 0 0 1 3-3a3 3 0 0 1 3 3a3 3 0 0 1-3 3m5-16H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V7z" /></svg>

@code
{
    [Parameter]
    public int Width { get; set; } = 2;
    [Parameter]
    public int Height { get; set; } = 2;
    [Parameter]
    public string ColourCode { get; set; } = "currentColor";
    [Parameter]
    public CssUnitType UnitType { get; set; } = CssUnitType.Rem;

    [Parameter] public string CssClass { get; set; } = string.Empty;

    [Parameter] public string AdditionalCss { get; set; } = string.Empty;
    [Parameter] public EventCallback Onclick { get; set; }

    private string GetWidth() => $"{Width}{UnitType.ToString().ToLowerInvariant()}";
    private string GetHeight() => $"{Height}{UnitType.ToString().ToLowerInvariant()}";

    private string GetCssUnitType()
    {
        if (UnitType == CssUnitType.Percent)
        {
            return "%";
        }
        else
        {
            return UnitType.ToString().ToLowerInvariant();
        }
    }
}

<!--
Her yerde istediğimiz gibi kullanabileceğimiz bir component oluşturduk.
    [Parameter] ile tanımladığımız property'ler ile component'e parametre gönderebiliriz.
    [EditorRequired] : Bir alanın değer içermesi gerektiğini söyler. Bu değer verilmezse kızar.
    InvokeAsync() : EventCallback tipindeki bir property'yi tetiklemek için kullanılır.


-->
